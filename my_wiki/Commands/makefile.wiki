= makefile =


* `make`是一个指令，它解释`Makefile`中的指令。
* 在`Makefile`中描述了整个工程所有文件的编译顺序、编译规则。
* `Makefile`有自己的关键字、函数。而且在`Makefile`中可以使用系统shell所提供的命令来完成想要的工作。
* `Makefile`不仅可以用来管理`C/C++`工程，那些编译器能够在shell下运行的语言所构建的工程都能用`make`工具来管理。
* `make`执行时，根据`Makefile`的规则检查文件的修改情况，决定是否执行定义的动作（那些修改过的文件将会被重新编译）

----

编译
链接
静态库
共享库

----
当使用`make`工具编译时，以下几种文件在执行`make`时将会被编译（重新编译）
* 所有的源文件没有被编译过，则对各个C源文件进行编译并链接，生成最后的可执行程序。
* 每一个在上次执行完`make`之后被修改的C源文件在本次执行`make`时将会被重新编译。
* 头文件在上一次执行`make`之后被修改，则所有包含次头文件的C源文件在本次执行`make`时将会被重新编译。（必须在`Makefile`中体现次包含关系才会如此）

后两种情况是 make 只将修改过的 C 源文件重新编译生成.o 文件，对于没有修改
的文件不进行任何工作。重新编译过程中，任何一个源文件的修改将产生新的对应的.o
文件，新的.o 文件将和以前的已经存在、此次没有重新编译的.o 文件重新连接生成最
后的可执行程序。

