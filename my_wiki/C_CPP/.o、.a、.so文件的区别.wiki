= .o、.a、.so文件的区别 =


* `.o`：称为目标文件，是源代码编译之后产生的二进制代码。
* `.a`：静态库，这个东西基本就是`.o`打了一个包，把多个`.o`文件放到一个`.a`文件里面。所以使用多个`.o`文件进行链接，或者使用打包好的`.a`文件进行链接，效果是一样的。
* `.so`：动态库，也是由`.o`文件生成的，但是其链接的机制是可执行程序运行时，才把动态库加载到程序的地址空间中。

----
为什么说`.a`和`.so`都是由`.o`文件生成的?假如有源文件`a.c`。
* 生成静态库
{{{shell
gcc -c a.c			生成目标文件a.o
ar -r liba.a a.o	生成静态库liba.a
}}}
* 生成动态库
{{{shell
gcc -shared a.c -o liba.so
or:
gcc -c a.c
gcc -shared a.o -o liba.so
}}}
所以动态库也是由`.o`文件生成的，前者只不过提供了更加快捷的方式了，其潜在的过程也要将`a.c`编译成`a.o`，然后再生成动态库`liba.so`。

----
=== 参考 ===
1. [[http://blog.csdn.net/chlele0105/article/details/23691147|Linux的.a、.so和.o文件]]
2. [[http://www.cppblog.com/wc250en007/archive/2012/11/03/194186.html|有关Linux的.a、.so和.o文件]]
